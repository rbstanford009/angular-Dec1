{"ast":null,"code":"import { catchError, tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../http.service\";\nimport * as i2 from \"@angular/router\";\nexport class MoviesonlineComponent {\n  //   private movieName: string;\n  constructor(movieService, router) {\n    this.movieService = movieService;\n    this.router = router;\n    this.movies = [];\n    this.movieName = '';\n  }\n  // constructor(private httpService: HttpService) { }\n  ngOnInit() {\n    this.getMovies();\n  }\n  getMovies() {\n    // https://api.themoviedb.org/3/search/movie?api_key=083f0465f131ae121114d5e51a6d4ddf&language=en-US&query=the&page=1&include_adult=true\n    let test = this.movieService.searchMovie(\"the\");\n    console.log('-----------------------');\n    console.log(test);\n    let test2 = test.pipe();\n    //\n    // test.forEach(function (any) {\n    //   console.log(any);\n    // });\n    // test2.forEach(function (any) {\n    //   console.log(any);\n    // });\n    let num = [7, 8, 9];\n    num.forEach(function (value) {\n      console.log(value);\n    });\n    // angular.forEach(test, function(arrayElement) {\n    //   $log.info(arrayElement);\n    // });\n    //\n    //  test2.subscribe()\n    //  test.subscribe()\n    // start\n    //   this.httpService.searchMovie(movie.search).subscribe(\n    test.subscribe(data => {\n      data.results.length = 10;\n      this.movies = data.results;\n      console.log('Searched Movies :', this.movies);\n      //    this.dataService.sendDataToService(this.movies);\n      this.router.navigate(['searchResults']);\n      this.movieName = '';\n      // @ts-ignore\n      document.getElementById('search-input-field').blur();\n    }, error => {\n      console.log(error.message);\n    });\n    // end\n    //  this.movieService.searchMovie(movie.search).subscribe(\n    this.movieService.searchMovie('the').subscribe(data => {\n      data.results.length = 10;\n      this.movies = data.results;\n      console.log('Searched Movies :', this.movies);\n      //        this.dataService.sendDataToService(this.movies);\n      this.router.navigate(['searchResults']);\n      this.movieName = '';\n      // @ts-ignore\n      document.getElementById('search-input-field').blur();\n    }, error => {\n      console.log(error.message);\n    });\n    this.movieService.getTrending();\n  }\n  /** GET movie from the server */\n  getMovies() {\n    return this.movieService.get(this.moviesUrl).pipe(tap(_ => this.log('fetched movies')), catchError(this.handleError('getMovies', [])));\n  }\n  getGenres() {\n    return this.movieService.getGenres();\n  }\n  searchMovie(name) {\n    let test = this.movieService.searchMovie(name);\n    //   test.pipe().\n    return null;\n  }\n  // searchMovies(term: string): Observable<Movie[]> {\n  //   Movie [] x = new Movie();\n  //   if (!term.trim()) {\n  //     // if not search term, return empty movie array.\n  //     return of([]);\n  //   }\n  //   return this.http.get<Movie[]>(url)\n  //       .pipe(\n  //           map(movies => movies[0]); // returns a {0|1} element array\n  //\n  //   return this.movieService..get<Movie[]>(`${this.moviesUrl}/?name=${term}`).pipe(\n  //       tap(x => x.length ?\n  //           this.log(`found movies matching \"${term}\"`) :\n  //           this.log(`no movies matching \"${term}\"`)),\n  //       catchError(this.handleError<Movie[]>('searchMovies', []))\n  //   );\n  // }\n  //\n  /*\r\n      searchMovies(term: string): Observable<Movie[]> {\r\n    if (!term.trim()) {\r\n      // if not search term, return empty movie array.\r\n      return of([]);\r\n    }\r\n    return this.http.get<Movie[]>(`${this.moviesUrl}/?name=${term}`).pipe(\r\n      tap(x => x.length ?\r\n         this.log(`found movies matching \"${term}\"`) :\r\n         this.log(`no movies matching \"${term}\"`)),\r\n      catchError(this.handleError<Movie[]>('searchMovies', []))\r\n    );\r\n  }\r\n    \r\n  constructor(private httpClient: HttpClient) { }\r\n      getTrending(): Observable<any> {\r\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${environment.api_key}`;\r\n        return this.httpClient.get<any>(url);\r\n  }\r\n      searchMovie(movieName: any): Observable<any> {\r\n  // https://api.themoviedb.org/3/search/movie?api_key=083f0465f131ae121114d5e51a6d4ddf&language=en-US&query=the&page=1&include_adult=true\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${environment.api_key}&language=en-US&query=${movieName}&page=1&include_adult=true`;\r\n    return this.httpClient.get<any>(url);\r\n  }\r\n      getFavourites(username: any): Observable<Array<Movie>> {\r\n    const url = `http://localhost:3000/${username}`;\r\n        return this.httpClient.get<Array<Movie>>(url);\r\n  }\r\n      addMovieToFavourites(username: any, movie: any): Observable<Movie> {\r\n    const url = `http://localhost:3000/${username}`;\r\n        return this.httpClient.post<Movie>(url, movie);\r\n  }\r\n      removeMovieFromFavourites(username: any, id: any): Observable<any> {\r\n    const url = `http://localhost:3000/${username}/${id}`;\r\n        return this.httpClient.delete(url);\r\n  }\r\n      getGenres(): Observable<any> {\r\n    const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${environment.api_key}&language=en-US`;\r\n        return this.httpClient.get(url);\r\n  }\r\n  */\n  handleError(searchMovies1, param2) {}\n  log(s) {}\n  static #_ = this.ɵfac = function MoviesonlineComponent_Factory(t) {\n    return new (t || MoviesonlineComponent)(i0.ɵɵdirectiveInject(i1.HttpService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MoviesonlineComponent,\n    selectors: [[\"app-movies\"]],\n    decls: 13,\n    vars: 0,\n    consts: [[\"for\", \"new-movie\"], [\"id\", \"new-movie\"], [\"movieName\", \"\"], [\"type\", \"button\", 1, \"add-button\", 3, \"click\"]],\n    template: function MoviesonlineComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"My Online Movies\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 0);\n        i0.ɵɵtext(4, \"Movie name Online: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 1, 2);\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function MoviesonlineComponent_Template_button_click_7_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(6);\n          ctx.getGenres();\n          return i0.ɵɵresetView(_r0.value = \"\");\n        });\n        i0.ɵɵtext(8, \" get movie Genre ButtonOneOnline \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function MoviesonlineComponent_Template_button_click_9_listener() {\n          return ctx.getMovies();\n        });\n        i0.ɵɵtext(10, \" get movie ButtonOneOnline \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function MoviesonlineComponent_Template_button_click_11_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(6);\n          ctx.getGenres();\n          return i0.ɵɵresetView(_r0.value = \"\");\n        });\n        i0.ɵɵtext(12, \" search movie ButtonOneOnline \");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\".movies[_ngcontent-%COMP%] {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 15em;\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  padding: .5rem;\\r\\n  margin: 1rem 0;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.movies[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.movies[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover {\\r\\n  left: .1em;\\r\\n}\\r\\n\\r\\n.movies[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\r\\n  color: #333;\\r\\n  text-decoration: none;\\r\\n  background-color: #EEE;\\r\\n  margin: .5em;\\r\\n  padding: .3em 0;\\r\\n  height: 1.6em;\\r\\n  border-radius: 4px;\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.movies[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\r\\n  color: #2c3a41;\\r\\n  background-color: #e6e6e6;\\r\\n}\\r\\n\\r\\n.movies[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:active {\\r\\n  background-color: #525252;\\r\\n  color: #fafafa;\\r\\n}\\r\\n\\r\\n.movies[_ngcontent-%COMP%]   .badge[_ngcontent-%COMP%] {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #405061;\\r\\n  line-height: 1em;\\r\\n  position: relative;\\r\\n  left: -1px;\\r\\n  top: -4px;\\r\\n  height: 1.8em;\\r\\n  min-width: 16px;\\r\\n  text-align: right;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 4px 0 0 4px;\\r\\n}\\r\\n\\r\\n.add-button[_ngcontent-%COMP%] {\\r\\n padding: .5rem 1.5rem;\\r\\n font-size: 1rem;\\r\\n margin-bottom: 2rem;\\r\\n}\\r\\n\\r\\n.add-button[_ngcontent-%COMP%]:hover {\\r\\n  color: white;\\r\\n  background-color: #42545C;\\r\\n}\\r\\n\\r\\nbutton.delete[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  left: 210px;\\r\\n  top: 5px;\\r\\n  background-color: white;\\r\\n  color:  #525252;\\r\\n  font-size: 1.1rem;\\r\\n  margin: 0;\\r\\n  padding: 1px 10px 3px 10px;\\r\\n}\\r\\n\\r\\nbutton.delete[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #525252;\\r\\n  color: white;\\r\\n}\\n/*# sourceURL=webpack://./src/app/moviesonline/moviesonline.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW92aWVzb25saW5lL21vdmllc29ubGluZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlDQUF5QztBQUN6QztFQUNFLGlCQUFpQjtFQUNqQixxQkFBcUI7RUFDckIsVUFBVTtFQUNWLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxXQUFXO0VBQ1gsY0FBYztFQUNkLGNBQWM7RUFDZCxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixlQUFlO0VBQ2YsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsV0FBVztBQUNiOztBQUVBO0VBQ0UsY0FBYztFQUNkLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGdCQUFnQjtFQUNoQixZQUFZO0VBQ1osNEJBQTRCO0VBQzVCLHlCQUF5QjtFQUN6QixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixTQUFTO0VBQ1QsYUFBYTtFQUNiLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLDBCQUEwQjtBQUM1Qjs7QUFFQTtDQUNDLHFCQUFxQjtDQUNyQixlQUFlO0NBQ2YsbUJBQW1CO0FBQ3BCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsUUFBUTtFQUNSLHVCQUF1QjtFQUN2QixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLFNBQVM7RUFDVCwwQkFBMEI7QUFDNUI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLyogTW92aWVzQ29tcG9uZW50J3MgcHJpdmF0ZSBDU1Mgc3R5bGVzICovXHJcbi5tb3ZpZXMge1xyXG4gIG1hcmdpbjogMCAwIDJlbSAwO1xyXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICBwYWRkaW5nOiAwO1xyXG4gIHdpZHRoOiAxNWVtO1xyXG59XHJcblxyXG5pbnB1dCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogLjVyZW07XHJcbiAgbWFyZ2luOiAxcmVtIDA7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuLm1vdmllcyBsaSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLm1vdmllcyBsaTpob3ZlciB7XHJcbiAgbGVmdDogLjFlbTtcclxufVxyXG5cclxuLm1vdmllcyBhIHtcclxuICBjb2xvcjogIzMzMztcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VFRTtcclxuICBtYXJnaW46IC41ZW07XHJcbiAgcGFkZGluZzogLjNlbSAwO1xyXG4gIGhlaWdodDogMS42ZW07XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubW92aWVzIGE6aG92ZXIge1xyXG4gIGNvbG9yOiAjMmMzYTQxO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XHJcbn1cclxuXHJcbi5tb3ZpZXMgYTphY3RpdmUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM1MjUyNTI7XHJcbiAgY29sb3I6ICNmYWZhZmE7XHJcbn1cclxuXHJcbi5tb3ZpZXMgLmJhZGdlIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgZm9udC1zaXplOiBzbWFsbDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogMC44ZW0gMC43ZW0gMCAwLjdlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDA1MDYxO1xyXG4gIGxpbmUtaGVpZ2h0OiAxZW07XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGxlZnQ6IC0xcHg7XHJcbiAgdG9wOiAtNHB4O1xyXG4gIGhlaWdodDogMS44ZW07XHJcbiAgbWluLXdpZHRoOiAxNnB4O1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gIG1hcmdpbi1yaWdodDogLjhlbTtcclxuICBib3JkZXItcmFkaXVzOiA0cHggMCAwIDRweDtcclxufVxyXG5cclxuLmFkZC1idXR0b24ge1xyXG4gcGFkZGluZzogLjVyZW0gMS41cmVtO1xyXG4gZm9udC1zaXplOiAxcmVtO1xyXG4gbWFyZ2luLWJvdHRvbTogMnJlbTtcclxufVxyXG5cclxuLmFkZC1idXR0b246aG92ZXIge1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDI1NDVDO1xyXG59XHJcblxyXG5idXR0b24uZGVsZXRlIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogMjEwcHg7XHJcbiAgdG9wOiA1cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgY29sb3I6ICAjNTI1MjUyO1xyXG4gIGZvbnQtc2l6ZTogMS4xcmVtO1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAxcHggMTBweCAzcHggMTBweDtcclxufVxyXG5cclxuYnV0dG9uLmRlbGV0ZTpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzUyNTI1MjtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["catchError","tap","MoviesonlineComponent","constructor","movieService","router","ngOnInit","getMovies","test","searchMovie","console","log","test2","pipe","num","forEach","value","subscribe","data","results","length","movies","navigate","movieName","document","getElementById","blur","error","message","getTrending","get","moviesUrl","_","handleError","getGenres","name","searchMovies1","param2","s","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Angular\\Wed1123\\src\\app\\moviesonline\\moviesonline.component.ts","C:\\Angular\\Wed1123\\src\\app\\moviesonline\\moviesonline.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { HttpService } from '../http.service';\r\n//import { Movie } from '../movie';\r\nimport { MovieService } from '../movie.service';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../environments/environment\";\r\nimport {Movie} from \"./movie\";\r\nimport {catchError, map, tap} from \"rxjs/operators\";\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-movies',\r\n  templateUrl: './moviesonline.component.html',\r\n  styleUrls: ['./moviesonline.component.css']\r\n})\r\nexport class MoviesonlineComponent implements OnInit {\r\n\r\n\r\n    public movies: Movie[] = [];\r\n\r\n    public movieName ='';\r\n //   private movieName: string;\r\n\r\n  constructor(\r\n      private movieService: HttpService,\r\n    private router: Router\r\n  ) { }\r\n // constructor(private httpService: HttpService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getMovies();\r\n  }\r\n\r\n  getMovies(): void {\r\n    // https://api.themoviedb.org/3/search/movie?api_key=083f0465f131ae121114d5e51a6d4ddf&language=en-US&query=the&page=1&include_adult=true\r\n    let test = this.movieService.searchMovie(\"the\");\r\n    console.log('-----------------------');\r\n    console.log(test);\r\n    let test2 = test.pipe();\r\n    //\r\n    // test.forEach(function (any) {\r\n    //   console.log(any);\r\n    // });\r\n    // test2.forEach(function (any) {\r\n    //   console.log(any);\r\n    // });\r\n\r\n    let num = [7, 8, 9];\r\n    num.forEach(function (value) {\r\n      console.log(value);\r\n    });\r\n    // angular.forEach(test, function(arrayElement) {\r\n    //   $log.info(arrayElement);\r\n    // });\r\n    //\r\n\r\n  //  test2.subscribe()\r\n  //  test.subscribe()\r\n// start\r\n //   this.httpService.searchMovie(movie.search).subscribe(\r\n    test.subscribe(\r\n        data => {\r\n          data.results.length = 10;\r\n          this.movies = data.results as Array<Movie>;\r\n\r\n          console.log('Searched Movies :', this.movies);\r\n\r\n\r\n      //    this.dataService.sendDataToService(this.movies);\r\n\r\n\r\n          this.router.navigate(['searchResults']);\r\n\r\n          this.movieName = '';\r\n\r\n          // @ts-ignore\r\n            document.getElementById('search-input-field').blur();\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n\r\n        }\r\n    );\r\n    // end\r\n    //  this.movieService.searchMovie(movie.search).subscribe(\r\n      this.movieService.searchMovie('the').subscribe(\r\n          data => {\r\n              data.results.length = 10;\r\n              this.movies = data.results as Array<Movie>;\r\n\r\n              console.log('Searched Movies :', this.movies);\r\n\r\n\r\n      //        this.dataService.sendDataToService(this.movies);\r\n\r\n              this.router.navigate(['searchResults']);\r\n\r\n              this.movieName = '';\r\n\r\n              // @ts-ignore\r\n              document.getElementById('search-input-field').blur();\r\n          },\r\n          error => {\r\n              console.log(error.message);\r\n\r\n          }\r\n      );\r\n\r\n\r\n    this.movieService.getTrending();\r\n  }\r\n    /** GET movie from the server */\r\n    getMovies(): Observable<Movie[]> {\r\n        return this.movieService.get<Movie[]>(this.moviesUrl)\r\n            .pipe(\r\n                tap(_ => this.log('fetched movies')),\r\n                catchError(this.handleError<Movie[]>('getMovies', []))\r\n            );\r\n    }\r\n\r\n  getGenres(): Observable<any> {\r\n\r\n    return this.movieService.getGenres();\r\n  }\r\n\r\n  searchMovie(name: string): Observable<any> | null {\r\n\r\n    let test = this.movieService.searchMovie(name);\r\n //   test.pipe().\r\n     return null;\r\n  }\r\n\r\n  // searchMovies(term: string): Observable<Movie[]> {\r\n  //   Movie [] x = new Movie();\r\n  //   if (!term.trim()) {\r\n  //     // if not search term, return empty movie array.\r\n  //     return of([]);\r\n  //   }\r\n  //   return this.http.get<Movie[]>(url)\r\n  //       .pipe(\r\n  //           map(movies => movies[0]); // returns a {0|1} element array\r\n  //\r\n  //   return this.movieService..get<Movie[]>(`${this.moviesUrl}/?name=${term}`).pipe(\r\n  //       tap(x => x.length ?\r\n  //           this.log(`found movies matching \"${term}\"`) :\r\n  //           this.log(`no movies matching \"${term}\"`)),\r\n  //       catchError(this.handleError<Movie[]>('searchMovies', []))\r\n  //   );\r\n  // }\r\n  //\r\n  /*\r\n\r\n  searchMovies(term: string): Observable<Movie[]> {\r\n    if (!term.trim()) {\r\n      // if not search term, return empty movie array.\r\n      return of([]);\r\n    }\r\n    return this.http.get<Movie[]>(`${this.moviesUrl}/?name=${term}`).pipe(\r\n      tap(x => x.length ?\r\n         this.log(`found movies matching \"${term}\"`) :\r\n         this.log(`no movies matching \"${term}\"`)),\r\n      catchError(this.handleError<Movie[]>('searchMovies', []))\r\n    );\r\n  }\r\n\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getTrending(): Observable<any> {\r\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${environment.api_key}`;\r\n\r\n    return this.httpClient.get<any>(url);\r\n  }\r\n\r\n  searchMovie(movieName: any): Observable<any> {\r\n  // https://api.themoviedb.org/3/search/movie?api_key=083f0465f131ae121114d5e51a6d4ddf&language=en-US&query=the&page=1&include_adult=true\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${environment.api_key}&language=en-US&query=${movieName}&page=1&include_adult=true`;\r\n    return this.httpClient.get<any>(url);\r\n  }\r\n\r\n  getFavourites(username: any): Observable<Array<Movie>> {\r\n    const url = `http://localhost:3000/${username}`;\r\n\r\n    return this.httpClient.get<Array<Movie>>(url);\r\n  }\r\n\r\n  addMovieToFavourites(username: any, movie: any): Observable<Movie> {\r\n    const url = `http://localhost:3000/${username}`;\r\n\r\n    return this.httpClient.post<Movie>(url, movie);\r\n  }\r\n\r\n  removeMovieFromFavourites(username: any, id: any): Observable<any> {\r\n    const url = `http://localhost:3000/${username}/${id}`;\r\n\r\n    return this.httpClient.delete(url);\r\n  }\r\n\r\n  getGenres(): Observable<any> {\r\n    const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${environment.api_key}&language=en-US`;\r\n\r\n    return this.httpClient.get(url);\r\n  }\r\n*/\r\n\r\n  private handleError<T>(searchMovies1: string, param2: any[]) {\r\n\r\n  }\r\n\r\n  private log(s: string) {\r\n\r\n  }\r\n}\r\n\r\n\r\n","<h2>My Online Movies</h2>\r\n\r\n<div>\r\n  <label for=\"new-movie\">Movie name Online: </label>\r\n  <input id=\"new-movie\" #movieName />\r\n\r\n\r\n  <button type=\"button\" class=\"add-button\" (click)=\"getGenres();movieName.value=''\">\r\n    get movie Genre ButtonOneOnline\r\n  </button>\r\n  <button type=\"button\" class=\"add-button\" (click)=\"getMovies();\">\r\n    get movie ButtonOneOnline\r\n  </button>\r\n  <button type=\"button\" class=\"add-button\" (click)=\"getGenres();movieName.value=''\">\r\n    search movie ButtonOneOnline\r\n  </button>\r\n</div>\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}